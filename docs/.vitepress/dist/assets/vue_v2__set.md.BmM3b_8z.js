import{_ as s,c as l,o as r,j as e,a as t}from"./chunks/framework.DPDPlp3K.js";const f=JSON.parse('{"title":"Vue.$set","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"vue/v2/$set.md","filePath":"vue/v2/$set.md","lastUpdated":null}'),n={name:"vue/v2/$set.md"};function o(i,a,u,d,c,p){return r(),l("div",null,a[0]||(a[0]=[e("h1",{id:"vue-set",tabindex:"-1"},[t("Vue.$set "),e("a",{class:"header-anchor",href:"#vue-set","aria-label":'Permalink to "Vue.$set"'},"​")],-1),e("h2",{id:"_1、vue-set-处理对象变成响应式背后的原理",tabindex:"-1"},[t("1、"),e("code",null,"Vue.$set"),t(" 处理对象变成响应式背后的原理 "),e("a",{class:"header-anchor",href:"#_1、vue-set-处理对象变成响应式背后的原理","aria-label":'Permalink to "1、`Vue.$set` 处理对象变成响应式背后的原理"'},"​")],-1),e("p",null,"答：获取当前对象的 Observer 实例，调用 defineReactive 转换成响应式，创建新的Dep实例， 通过 observer 实例下的 Dep，手动触发依赖通知",-1),e("ul",null,[e("li",null,"若目标为响应式对象，则调用 defineReactive 将新属性转换为响应式"),e("li",null,"手动触发依赖更新：dep.notify()")],-1)]))}const $=s(n,[["render",o]]);export{f as __pageData,$ as default};
